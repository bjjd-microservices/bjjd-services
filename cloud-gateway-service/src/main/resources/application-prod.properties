#Application Name
spring.application.name=cloud-gateway-service

#Port of the application
server.port=8080

#Spring profile
spring.profiles.active=${SPRING_ACTIVE_PROFILE:prod}
spring.cloud.kubernetes.discovery.all-namespaces=true

#It is worth mentioning that user-service acts as a Eureka client. So, we give it a name, port, and link to Eureka server 
# eureka server url
#eureka.client.service-url.default-zone=http://localhost:8761/eureka
eureka.client.enabled=false
eureka.client.serviceUrl.registerWithEureka=false

spring.sleuth.sampler.probability = 1.0

hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=5000000
ribbon.ReadTimeout=20000000
ribbon.ConnectTimeout=20000000

spring.cloud.gateway.default-filters=TokenRelay

app.config.keycloak.baseUrl=http://localhost:8180
app.config.keycloak.url=http://localhost:8180/auth
app.config.keycloak.realm=oauth2-bjjd-system-realm

## API SECURITY WITH KEYCLOAK PROVIDER
spring.security.oauth2.client.provider.keycloak.authorization-uri=${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.token-uri=${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-authentication-method=header
spring.security.oauth2.client.provider.keycloak.user-info-uri=${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.authorization-uri=${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.issuer-uri=${app.config.keycloak.url}/realms/${app.config.keycloak.realm}

## API WITH KEYCLOAK : oauth2-bjjd-system-client This is the client we created in Keycloak server
spring.security.oauth2.client.registration.oauth2-bjjd-system-client.provider=keycloak
spring.security.oauth2.client.registration.oauth2-bjjd-system-client.client-id=oauth2-bjjd-system-client
spring.security.oauth2.client.registration.oauth2-bjjd-system-client.client-secret=1ba4b9c5-7dc1-41a7-aa9b-55ff144de886
spring.security.oauth2.client.registration.oauth2-bjjd-system-client.scope=openid, profile, roles
#spring.security.oauth2.client.registration.oauth2-bjjd-system-client.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.oauth2-bjjd-system-client.redirect-uri=${app.config.keycloak.baseUrl}/login/oauth2/code/keycloak

spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/certs