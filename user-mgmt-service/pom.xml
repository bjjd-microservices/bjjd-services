<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.jmk</groupId>
    <artifactId>user-mgmt-service</artifactId>
    <packaging>jar</packaging>
    <name>user-mgmt-service</name>
    <version>0.0.1-SNAPSHOT</version>
    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <springfox-version>2.7.0</springfox-version>
        <spring-cloud.version>2.1.2.RELEASE</spring-cloud.version>
   		 <hibernate.version>5.4.10.Final</hibernate.version>
    </properties>
    
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    
    <dependencies>
        <dependency>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-web</artifactId>
</dependency>
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-tomcat</artifactId>
	</dependency>

	<!-- Thymeleaf is a Java library. It is an XML/XHTML/HTML5 template engine 
		that is able to apply a set of transformations to template files in order 
		to display data and/or text produced by your applications. -->
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-thymeleaf</artifactId>
	</dependency>
	
	<!--SpringFox dependencies -->
	<dependency>
		<groupId>io.springfox</groupId>
		<artifactId>springfox-swagger2</artifactId>
		<version>${springfox-version}</version>
	</dependency>
	<dependency>
		<groupId>io.springfox</groupId>
		<artifactId>springfox-swagger-ui</artifactId>
		<version>${springfox-version}</version>
	</dependency>

	<dependency>
		<groupId>com.github.joschi.jackson</groupId>
		<artifactId>jackson-datatype-threetenbp</artifactId>
		<version>2.6.4</version>
	</dependency>
	

	<!-- Starter for using Spring Data JPA with Hibernate to store and retrieve 
		data in a relational database. -->
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-data-jpa</artifactId>
	</dependency>

	<!--MySQL provides connectivity for client applications developed in the Java with MySQL Connector/J, 
	    a driver that implements the Java Database Connectivity (JDBC) API. MySQL Connector/J is a JDBC Type 4 driver. -->
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>8.0.13</version><!--$NO-MVN-MAN-VER$-->
	</dependency>

	<dependency>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		<version>${spring-cloud.version}</version>
	</dependency>

	<dependency>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
		<version>${spring-cloud.version}</version>
	</dependency>

	<dependency>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-starter-sleuth</artifactId>
		<version>${spring-cloud.version}</version>
	</dependency>

	<!-- Bean Validation API support -->
	<dependency>
		<groupId>javax.validation</groupId>
		<artifactId>validation-api</artifactId>
	</dependency>

	<dependency>
		<groupId>org.modelmapper</groupId>
		<artifactId>modelmapper</artifactId>
		<version>2.3.5</version>
	</dependency>

	<dependency>
		<groupId>com.jmk</groupId>
		<artifactId>common-service</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</dependency>
	
	<!-- spring-boot-starter-test “Starter”, which imports both Spring Boot test modules 
	    as well as JUnit, AssertJ, Hamcrest, and a number of other useful libraries. -->
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-test</artifactId>
		<scope>test</scope>
	</dependency>
        
    </dependencies>
        <build>
        <sourceDirectory>src/main/java</sourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    
</project>
