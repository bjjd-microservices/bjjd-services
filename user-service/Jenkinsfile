pipeline {
  agent any
  environment {
    GITHUB_CREDENTIALS = credentials('github-credentials-id')
  }
  tools {
    maven 'M3'
  }
  stages {
    stage('Checkout from Github') {
      steps {
        git url: 'https://github.com/bjjd-microservices/bjjd-services.git', branch: 'master'
      }
    }
    stage('Quality Status Gate Check') {
      steps {
        dir('user-service') {
            script {
              withSonarQubeEnv('sonarserver') {
                sh "mvn sonar:sonar"
              }
              timeout(time: 1, unit: 'HOURS') {
                def qg = waitForQualityGate()
                if (qg.status != 'OK') {
                  error "Pipeline aborted due to quality gate failure: ${qg.status}"
                }
              }
            }
          }
      }
    }
    stage('Extract Build Version') {
      steps {
        script {
          def version = sh script: 'mvn help:evaluate -Dexpression=project.version -q -DforceStdout', returnStdout: true
          print version
          env.version = version
        }
      }
    }
    stage('Build Docker Image and push on Nexus Repository') {
      steps {
          withCredentials([string(credentialsId: 'DockerRepositoryPasswordNexus', variable: 'DockerRepositoryPasswordNexus')]) {
               sh "docker build -t localhost:8083/user-service:${env.version} -f Dockerfile user-service/user-service"
               sh "docker login -u admin -p ${DockerRepositoryPasswordNexus} localhost:8083"
               sh "docker push localhost:8083/user-service:${env.version}"
               sh "docker rmi localhost:8083/user-service:${env.version}"
        }
      }
    }
  }
}