/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.jmk.darshan.api;

import java.util.List;

import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.jmk.darshan.model.Darshan;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-05-12T00:51:00.325+05:30")

@Api(value = "darshan", description = "the darshan API")
@RequestMapping(value = "/darshan")
public interface DarshanApi {

    @ApiOperation(value = "Darshan Deletion Service based on the darshan id", nickname = "deleteDarshanById", notes = "Darshan Deletion Service based on the darshan id", tags={ "DarshanMgmt", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Darshan deleted succussfully"),
        @ApiResponse(code = 400, message = "Invalid User id supplied"),
        @ApiResponse(code = 404, message = "Darshan Id not found"),
        @ApiResponse(code = 500, message = "Internal Server Error") })
    @RequestMapping(value = "/{id}",produces = { "application/json" }, consumes = { "application/json" }, method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteDarshanById(@ApiParam(value = "Darshan Id",required=true) @PathVariable("id") Long id);

    @ApiOperation(value = "Find Darshan Details based on the darshan id", nickname = "findDarshanDetailsById", notes = "Find Darshan Details based on the darshan id", response = Darshan.class, tags={ "DarshanMgmt", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully found", response = Darshan.class),
        @ApiResponse(code = 400, message = "Invalid Darshan name and password supplied"),
        @ApiResponse(code = 404, message = "Darshan not found or inactive"),
        @ApiResponse(code = 500, message = "Internal Server Error") })
    @RequestMapping(value = "/{id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<Darshan> findDarshanDetailsById(@ApiParam(value = "Darshan Id",required=true) @PathVariable("id") Long id);

    @ApiOperation(value = "Darshan Saving Service", nickname = "saveDarshan", notes = "Darshan Saving Service", response = Darshan.class, tags={ "DarshanMgmt", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Darshan.class),
        @ApiResponse(code = 400, message = "Bad Request"),
        @ApiResponse(code = 500, message = "Internal Server Error") })
    @RequestMapping(value = "/",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.POST)
    ResponseEntity<Darshan> saveDarshan(@ApiParam(value = "darshanRequest" ,required=true )  @Valid @RequestBody Darshan darshan,@ApiParam(value = "xChannel" ) @RequestHeader(value="xChannel", required=false) String xChannel);

    @ApiOperation(value = "Darshan saving with input arrays Service", nickname = "saveDarshansWithArrayInput", notes = "Darshan Finding Service", tags={ "DarshanMgmt", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully found"),
        @ApiResponse(code = 500, message = "Internal Server Error") })
    @RequestMapping(value = "/saveDarshans",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<List<Darshan>> saveDarshans(@ApiParam(value = "" ,required=true )  @Valid @RequestBody List<Darshan> body,@ApiParam(value = "" ) @RequestHeader(value="xChannel", required=false) String xChannel);

    @ApiOperation(value = "Update Darshan Details based on the darshan id", nickname = "updateDarshanById", notes = "Update Darshan Details based on the darshan id", response = Darshan.class, tags={ "DarshanMgmt", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully found", response = Darshan.class),
        @ApiResponse(code = 400, message = "Invalid Darshan name supplied"),
        @ApiResponse(code = 404, message = "Darshan not found or inactive"),
        @ApiResponse(code = 500, message = "Internal Server Error") })
    @RequestMapping(value = "/{id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Darshan> updateDarshanById(@ApiParam(value = "Darshan Id",required=true) @PathVariable("id") Long id,@ApiParam(value = "" ,required=true )  @Valid @RequestBody Darshan body);
}
