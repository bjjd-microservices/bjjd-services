/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.jmk.bjjd.member.api;

import javax.validation.Valid;

import org.jmk.bjjd.member.model.MemberModel;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-12-06T08:07:29.390+05:30")

@Api(value = "member", description = "the member API")
public interface MemberApi {

    @ApiOperation(value = "Member Creation Service", nickname = "createMember", notes = "Member Creation Service", response = MemberModel.class, tags={ "MemberMgmt", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = MemberModel.class),
        @ApiResponse(code = 400, message = "Bad Request"),
        @ApiResponse(code = 500, message = "Internal Server Error") })
    @RequestMapping(value = "/member",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<MemberModel> createMember(@ApiParam(value = "" ,required=true )  @Valid @RequestBody MemberModel body,@ApiParam(value = "" ) @RequestHeader(value="X-Request-ID", required=false) String xRequestID,@ApiParam(value = "" ) @RequestHeader(value="X-Channel", required=false) String xChannel);


    @ApiOperation(value = "Member Deletion Service", nickname = "deleteMember", notes = "Member Deletion Service", tags={ "MemberMgmt", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Member deleted succussfully"),
        @ApiResponse(code = 400, message = "Invalid member id supplied"),
        @ApiResponse(code = 404, message = "Member Id not found"),
        @ApiResponse(code = 500, message = "Internal Server Error") })
    @RequestMapping(value = "/member/{memberId}",
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteMember(@ApiParam(value = "MemberId to be delete",required=true) @PathVariable("memberId") Long memberId,@ApiParam(value = "" ) @RequestHeader(value="X-Request-ID", required=false) String xRequestID,@ApiParam(value = "" ) @RequestHeader(value="X-Channel", required=false) String xChannel);

}
