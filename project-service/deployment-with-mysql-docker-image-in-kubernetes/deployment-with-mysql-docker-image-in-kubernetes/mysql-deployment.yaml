apiVersion: apps/v1
kind: Deployment
metadata:
  name: project-service-mysql
  labels:
    app: project-service
spec:
  selector:
    matchLabels:
      app: project-service
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: project-service
        tier: mysql
    spec:
      containers:
      - image: mysql:5.7
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
             secretKeyRef:
                name: project-service-secrets
                key: database.root.password
        - name: MYSQL_DATABASE
          valueFrom:
             configMapKeyRef:
              name: project-service-configmap
              key: database.hostname
        - name: MYSQL_USER
          valueFrom: 
             configMapKeyRef:
                 name: project-service-configmap
                 key: database.username
        - name: MYSQL_PASSWORD
          valueFrom:
             secretKeyRef:
                name: project-service-secrets
                key: database.password
        args:
          - "--ignore-db-dir=lost+found" #CHANGE
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim #Attach a persistent volume mysql-pv-claim.
---
apiVersion: v1
kind: Service
metadata:
  name: project-service-mysql # DNS name which will be used by microservices to connect with MySQL
  labels:
    app: project-service
spec:
  ports:
  - name: "mysql-port"
    port: 3306
    targetPort: 3306
  selector:
    app: project-service
    tier: mysql
  clusterIP: None
